I"<h1 id="lecture-34--dec-4th-2019">Lecture 34 – Dec 4th, 2019</h1>

<h2 id="setup">Setup</h2>
<ol>
  <li>Log in to clyde.</li>
</ol>

<h2 id="task">Task</h2>
<ol>
  <li>Go to
<a href="https://github.com/systems-programming/hello">https://github.com/systems-programming/hello</a>
and fork the repository.</li>
  <li>Pick one of the changes below (or anything else you desire), and you’re
going to implement the change and create a pull request for it in
subsequent steps.
Change ideas:
    <ul>
      <li>Add a <code class="highlighter-rouge">Makefile</code> that will build the program.</li>
      <li>Use <code class="highlighter-rouge">getenv(3)</code> to get the <code class="highlighter-rouge">USER</code> variable and use that to customize the
message.</li>
      <li>Exit with the <code class="highlighter-rouge">EXIT_SUCCESS</code> value defined in <code class="highlighter-rouge">stdlib.h</code> rather than just
<code class="highlighter-rouge">0</code>.</li>
      <li>Write a <code class="highlighter-rouge">goodbye</code> program.</li>
      <li>Write some other simple program.</li>
      <li>Add an image to the <code class="highlighter-rouge">README.md</code></li>
      <li>Add a <code class="highlighter-rouge">.travis.yml</code> file to make sure the program builds when changes are
committed.</li>
      <li>Make any other changes you desire.</li>
    </ul>
  </li>
  <li>Once you have a change in mind, pick a short name that is reflective of
that change and create and checkout a new branch.
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git checkout -b my-feature
</code></pre></div>    </div>
    <p>(Pick a better name than <code class="highlighter-rouge">my-feature</code>!)</p>
  </li>
  <li>Implement your change and commit your change.</li>
  <li>Push your change to Github.
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git push -u origin my-feature
</code></pre></div>    </div>
  </li>
  <li>You should get a message about visiting a URL to submit a pull request. Go
to the URL and submit the pull request.</li>
  <li>Modify the pull request by making another commit and pushing again. (Assume
you got asked to make a change to what you committed.)</li>
  <li>Squash your changes using
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git rebase -i master
</code></pre></div>    </div>
    <p>This should open your editor. You’ll want to <code class="highlighter-rouge">pick</code> the top-most commit and
<code class="highlighter-rouge">squash</code> the others.
Save the file and exit the editor.
Push them to Github.</p>
  </li>
  <li>Check out your pull request (and others) by going to
<a href="https://github.com/systems-programming/hello/pulls">https://github.com/systems-programming/hello/pulls</a>.
Feel free to leave comments on other people’s pull requests.</li>
  <li>If your PR is accepted, fetch from <code class="highlighter-rouge">upstream</code> (you’ll need to add that
first) and delete your branches.
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git remote add upstream https://github.com/systems-programming/hello.git
$ git fetch upstream master:master
$ git branch -d my-feature # you may need -D instead of -d
$ git push origin -d my-feature # or delete from the web interface
</code></pre></div>    </div>
    <p>If your PR needs to be modified to handle upstream changes, fetch from
upstream, rebase, fix any conflicts, and push.</p>
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git remote add upstream https://github.com/systems-programming/hello.git
$ git fetch upstream master:master
$ git rebase master
$ git push
</code></pre></div>    </div>
    <p>If there were conflicts after the <code class="highlighter-rouge">rebase</code>, you’ll need to fix them, run
<code class="highlighter-rouge">$ git add</code> on the file with conflicts and then <code class="highlighter-rouge">$ git rebase --continue</code>.</p>
  </li>
</ol>
:ET